// Run 'gradle checkUpdates' to find out which dependencies have newer versions
plugins {
    id 'com.palantir.git-version' version '0.12.2'
    id 'maven-publish'
    id 'signing'
    id 'de.marcphilipp.nexus-publish' version '0.4.0'
    id 'name.remal.check-updates' version '1.3.1'
}

apply plugin: 'maven-publish'
apply plugin: 'de.marcphilipp.nexus-publish'

if (hasProperty('signing.keyId')) {
    apply plugin: 'signing'
    signing {
        sign configurations.archives
    }
}

description = '''Temporal Workflow Java SDK testing'''

dependencies {
    api project(':temporal-sdk')

    implementation group: 'com.google.guava', name: 'guava', version: '30.1.1-jre'
    implementation group: 'com.cronutils', name: 'cron-utils', version: '9.1.5'

    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
}

test {
    testLogging {
        events 'passed', 'skipped', 'failed'
        exceptionFormat 'full'
        // Uncomment the following line if you want to see test logs in gradlew run.
        showStandardStreams true
    }
    forkEvery = 1
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Temporal Java SDK testing'
                packaging = 'jar'
                // optionally artifactId can be defined here
                description = 'Temporal Workflow Java SDK testing'
                url = 'https://github.com/temporalio/temporal-java-sdk'

                scm {
                    connection = 'scm:git@github.com:temporalio/temporal-java-sdk.git'
                    developerConnection = 'scm:git@github.com:temporalio/temporal-java-sdk.git'
                    url = 'https://github.com/temporalio/temporal-java-sdk.git'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'mfateev'
                        name = 'Maxim Fateev'
                        email = 'maxim@temporal.io'
                    }
                    developer {
                        id = 'samarabbas'
                        name = 'Samar Abbas'
                        email = 'samar@temporal.io'
                    }
                }
            }
        }

    }

    signing {
        sign publishing.publications.mavenJava
    }

    // Uncomment to test local publishing and comment nexusPublishing
//    repositories {
//        maven {
//            def releasesRepoUrl = "$System.env.HOME/repos/releases"
//            def snapshotsRepoUrl = "$System.env.HOME/repos/snapshots"
//            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
//        }
//    }

}

nexusPublishing {
    repositories {
        sonatype {
            username = project.hasProperty('ossrhUsername') ? project.property('ossrhUsername') : ''
            password = project.hasProperty('ossrhPassword') ? project.property('ossrhPassword') : ''
        }
    }
}
